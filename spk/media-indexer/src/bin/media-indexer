#!/bin/sh

#
# This script is inspired by a solution posted on a Synology forum:
# http://forum.synology.com/enu/viewtopic.php?f=37&t=30242
#

while getopts p:f:l: opt ; do
    case "${opt}" in
        p) PID_FILE="${OPTARG}" ;;
        f) FIFO_FILE="${OPTARG}" ;;
        l) LOG_FILE="${OPTARG}" ;;
        \?) # unknow flag
           echo >&2 \
           "usage: $0 [-p pid-file] [-f fifo-file] [-l log-file] [directory ...]"
           exit 1 ;;
    esac
done

shift $((OPTIND-1))

if [ -z "${PID_FILE}" ] ; then
    echo "Option "-p" cannot be empty"
    exit 1
elif [ -z "${FIFO_FILE}" ] ; then
    echo "Option "-f" cannot be empty"
    exit 1
fi

if [ ! -e "${FIFO_FILE}" ] ; then
    mknod "${FIFO_FILE}" p
fi

# set Internal Field Separator with ":" to separate directory names
IFS=":"

# use $* to get the list of directories
DIRECTORIES=$*
echo "Directories watched: ${DIRECTORIES}"

/usr/local/bin/inotifywait -mrcq -e close_write -e moved_to -e moved_from -e move -e create -e delete -e unmount ${DIRECTORIES} > "${FIFO_FILE}" &
echo $! > "${PID_FILE}"

while read -r ; do
    echo "${REPLY}"

    eval "$(echo "$REPLY" | sed -r 's#'\''#'\'\\\\\'\''#; s#^("([^"]*)"|([^"][^,]*)),("([^"]*)"|([^"][^,]*)),("([^"]*)"|([^"][^,]*))$#file_name='\''\2\3\8\9'\''; action='\''\5\6'\''#')"

    #if [ "$action" = "CREATE" ] ; then
    #echo '0 NOTHING to file CREATE! ONLY on WRITE_CLOSE'
    #fi

    if [ "$action" = "CREATE,ISDIR" ] ; then
        /usr/syno/bin/synoindex -A "$file_name" > /dev/null
        log="At `date`, Media Indexer ADD DIRs: $file_name"
    fi
    if [ "$action" = "CLOSE_WRITE,CLOSE" ] ; then
        /usr/syno/bin/synoindex -a "$file_name" > /dev/null
        log="At `date`, Media Indexer ADD FILES: $file_name"
    fi
    if [ "$action" = "DELETE" ] ; then
        /usr/syno/bin/synoindex -d "$file_name" > /dev/null
        log="At `date`, Media Indexer REMOVE FILES: $file_name"
    fi
    if [ "$action" = "DELETE,ISDIR" ] ; then
        /usr/syno/bin/synoindex -D "$file_name" > /dev/null
        log="At `date`, Media Indexer REMOVE DIRs: $file_name"
    fi
    if [ "$action" = "MOVED_FROM,ISDIR" ] ; then
        /usr/syno/bin/synoindex -D "$file_name" > /dev/null
        log="At `date`, Media Indexer REMOVE DIRs: $file_name"
    fi
    if [ "$action" = "MOVED_FROM" ] ; then
        /usr/syno/bin/synoindex -d "$file_name" > /dev/null
        log="At `date`, Media Indexer REMOVE FILES: $file_name"
    fi
    if [ "$action" = "MOVED_TO,ISDIR" ] ; then
        /usr/syno/bin/synoindex -A "$file_name" > /dev/null
        log="At `date`, Media Indexer ADD DIRs: $file_name"
    fi
    if [ "$action" = "MOVED_TO" ] ; then
        /usr/syno/bin/synoindex -a "$file_name" > /dev/null
        log="At `date`, Media Indexer ADD FILES: $file_name"
    fi

    if [ -n "${LOG_FILE}" ] && [ -n "$log" ] ; then
        echo "$log" >> "${LOG_FILE}" 2>&1
    fi
    unset log
done < "${FIFO_FILE}" &
